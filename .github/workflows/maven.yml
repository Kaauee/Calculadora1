# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Integracao Continua de Java com Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-dev:
      
    runs-on: ubuntu-latest
    environment:
        name: dev
    steps:
    - name: Realiza o checkout do repositorio
      uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Compila o projeto com Maven
      run: mvn -B compile --file pom.xml

  build-hmg:
    runs-on: ubuntu-latest
    environment:
        name: hmg
    needs: build-dev
    steps:
    - name: Realiza o checkout do repositorio
      uses: actions/checkout@v3
      with:
          fetch-depth: 0
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Testa o projeto com Maven
      run: mvn -B test --file pom.xml
      
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
        
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Verifica o projeto com Maven e Jacoco
      env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Kaauee_Calculadora1
      
      
      
      
  build-prd:
    runs-on: ubuntu-latest
    environment:
        name: prd
    needs: build-hmg
    steps:
    - name: Realiza o checkout do repositorio
      uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Empacota o projeto com maven
      run: mvn -B package --file pom.xml
    - name: Crie uma pasta temporaria de download de artefatos
      run: mkdir staging
    - name: Copia os artefatos a serem publicados na pasta temporaria
      run: cp target/*jar-with-dependencies.jar staging
    - name: Usa Upload Artifact do GitHub Action
      uses: actions/upload-artifact@v2
      with:
          name: Package
          path: staging
